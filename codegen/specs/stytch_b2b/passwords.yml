classname: Passwords
additional_imports:
  - from stytch.core.models import Name
methods:
  - name: authenticate
    method: POST
    args:
      - name: organization_id
        arg_type: str
      - name: email_address
        arg_type: str
      - name: password
        arg_type: str
      - name: session_token
        arg_type: Optional[str] = None
      - name: session_jwt
        arg_type: Optional[str] = None
      - name: session_duration_minutes
        arg_type: Optional[int] = None
      - name: session_custom_claims
        arg_type: Optional[Dict[str, Any]] = None
    response_type:
      member: Member
      member_id: str
      organization_id: str
      organization: Organization
      session_token: str
      session_jwt: str
      member_session: Optional[B2BStytchSession]
  - name: strength_check
    method: POST
    args:
      - name: password
        arg_type: str
      - name: email_address
        arg_type: Optional[str] = None
    response_type:
      breach_detection_on_create: bool
      breached_password: bool
      luds_feedback: dict
      request_id: str
      score: int
      status_code: int
      strength_policy: str
      valid_password: bool
      zxcvbn_feedback: dict
  - name: migrate
    method: POST
    args:
      - name: organization_id
        arg_type: str
      - name: email_address
        arg_type: str
      - name: hash
        arg_type: str
      - name: hash_type
        arg_type: str
      - name: md_5_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: argon_2_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: sha_1_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: scrypt_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: name
        arg_type: Optional[Union[Name, Dict[str, str]]] = None
      - name: trusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
      - name: untrusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
    response_type:
      member: Member
      member_id: str
      organization: Organization
sub_apis:
  - classname: Email
    additional_imports:
      - from stytch.core.b2b.models import B2BStytchSession, Member, Organization
    sub_url: passwords/email
    filename: passwords_email
    methods:
      - name: reset_start
        api_path: reset/start
        method: POST
        args:
          - name: organization_id
            arg_type: str
          - name: email_address
            arg_type: str
          - name: login_redirect_url
            arg_type: Optional[str] = None
          - name: reset_password_redirect_url
            arg_type: Optional[str] = None
          - name: reset_password_expiration_minutes
            arg_type: Optional[int] = None
          - name: locale
            arg_type: Optional[str] = None
          - name: reset_password_template_id
            arg_type: Optional[str] = None
        response_type:
          member_id: str
          member_email_id: str
      - name: reset
        method: POST
        args:
          - name: password_reset_token
            arg_type: str
          - name: password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
          - name: session_duration_minutes
            arg_type: Optional[int] = None
          - name: session_custom_claims
            arg_type: Optional[Dict[str, Any]] = None
        response_type:
          member: Member
          member_id: str
          member_email_id: str
          organization_id: str
          organization: Organization
          session_token: str
          session_jwt: str
          member_session: Optional[B2BStytchSession]
  - classname: ExistingPassword
    sub_url: passwords/existing_password
    filename: passwords_existing_password
    methods:
      - name: reset
        method: POST
        args:
          - name: organization_id
            arg_type: str
          - name: email_address
            arg_type: str
          - name: existing_password
            arg_type: str
          - name: new_password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
          - name: session_duration_minutes
            arg_type: Optional[int] = None
          - name: session_custom_claims
            arg_type: Optional[Dict[str, Any]] = None
        response_type:
          member: Member
          member_id: str
          organization_id: str
          organization: Organization
          session_token: str
          session_jwt: str
          member_session: Optional[B2BStytchSession]
  - classname: Session
    sub_url: passwords/session
    filename: passwords_session
    methods:
      - name: reset
        method: POST
        args:
          - name: organization_id
            arg_type: str
          - name: password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
        response_type:
          member: Member
          member_id: str
          organization: Organization
          member_session: Optional[B2BStytchSession]